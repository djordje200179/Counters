{"version":3,"sources":["App.tsx","components/counter.tsx","components/incrementer.tsx","components/stopwatch.tsx","components/header.tsx","index.tsx"],"names":["CounterType","Counter","this","setState","editingTitle","event","KeyboardEvent","code","FocusEvent","title","currentTarget","value","titleText","Button","onClick","changeTitleToInput","className","state","titleEdit","type","maxLength","onKeyUp","checkChangingToText","onBlur","defaultValue","Component","Incrementer","props","autobind","children","count","Badge","color","getTitleField","getCount","size","doIncrement","doDecrement","disabled","canDecrement","removeAction","Stopwatch","tenths","stopwatch","window","setInterval","updateTime","clearInterval","isRunning","onPause","onStart","time","Date","getUTCHours","slice","getUTCMinutes","getUTCSeconds","String","getUTCMilliseconds","getTimeText","getStartButton","onStop","isResetButtonDisabled","Header","dropdownOpen","Navbar","dark","NavbarBrand","getCorrectText","Nav","NavItem","ButtonDropdown","isOpen","toggle","toggleDropdown","DropdownToggle","caret","DropdownMenu","right","DropdownItem","addIncrementer","addStopwatch","canDeleteElements","removeAllElements","App","elements","key","length","newElementKey","getNewKey","console","log","filter","addCounter","map","element","removeElement","error","ReactDOM","render","document","getElementById"],"mappings":"qIAUKA,E,sHCIyBC,E,wKAC7B,WACCC,KAAKC,SAAS,CACbC,cAAc,M,iCAIhB,SAA4BC,IACtBA,aAAiBC,iBAAgC,UAAfD,EAAME,MAAqBF,aAAiBG,eAClFN,KAAKC,SAAS,CACbM,MAAOJ,EAAMK,cAAcC,MAC3BP,cAAc,M,2BAIjB,WACC,IAAIQ,EAAY,cAACC,EAAA,EAAD,CAAQC,QAASZ,KAAKa,mBAAoBC,UAAU,QAApD,SAA6Dd,KAAKe,MAAMR,QACpFS,EAAY,uBAAOC,KAAK,OACLC,UAAW,GACXJ,UAAU,iCACVK,QAASnB,KAAKoB,oBACdC,OAAQrB,KAAKoB,oBACbE,aAActB,KAAKe,MAAMR,QAEhD,OAAOP,KAAKe,MAAMb,aAAec,EAAYN,M,GAxB+Ca,a,QCNzEC,E,kDACpB,WAAmBC,GAAsB,IAAD,6BACvC,cAAMA,GACNC,IAAS,gBAET,EAAKX,MAAQ,CACZR,MAAO,EAAKkB,MAAME,SAClBzB,cAAc,EACd0B,MAAO,GAP+B,E,4CAWxC,WACC,OAA4B,IAArB5B,KAAKe,MAAMa,MAAc,2BAAS5B,KAAKe,MAAMa,Q,yBAGrD,WACC5B,KAAKC,SAAS,CACb2B,MAAO5B,KAAKe,MAAMa,MAAQ,M,yBAI5B,WACC5B,KAAKC,SAAS,CACb2B,MAAO5B,KAAKe,MAAMa,MAAQ,M,0BAI5B,WACC,OAA4B,IAArB5B,KAAKe,MAAMa,Q,oBAGnB,WACC,OACC,eAACC,EAAA,EAAD,CAAOC,MAAM,UAAUhB,UAAU,yBAAjC,UACEd,KAAK+B,gBAEN,oBAAIjB,UAAU,YAAd,SAA2Bd,KAAKgC,aAEhC,cAACrB,EAAA,EAAD,CAAQmB,MAAM,YAAYG,KAAK,KAAKrB,QAASZ,KAAKkC,YAAapB,UAAU,MAAzE,wDACA,cAACH,EAAA,EAAD,CAAQmB,MAAM,YACNG,KAAK,KACLrB,QAASZ,KAAKmC,YACdrB,UAAU,MACVsB,SAAUpC,KAAKqC,eAJvB,4CAKA,cAAC1B,EAAA,EAAD,CAAQmB,MAAM,SAASG,KAAK,KAAKrB,QAASZ,KAAKyB,MAAMa,aAAcxB,UAAU,MAA7E,+D,GA7CqCf,GCCpBwC,E,kDACpB,WAAmBd,GAAsB,IAAD,6BACvC,cAAMA,GACNC,IAAS,gBAET,EAAKX,MAAQ,CACZR,MAAO,EAAKkB,MAAME,SAClBzB,cAAc,EACdsC,OAAQ,EACRC,WAAY,GAR0B,E,8CAYxC,WACCzC,KAAKC,SAAS,CACbuC,OAAQxC,KAAKe,MAAMyB,OAAS,M,qBAI9B,WACCxC,KAAKC,SAAS,CACbwC,UAAWC,OAAOC,YAAY3C,KAAK4C,WAAY,S,qBAIjD,WACCC,cAAc7C,KAAKe,MAAM0B,WAEzBzC,KAAKC,SAAS,CACbwC,WAAY,M,oBAId,WACCzC,KAAKC,SAAS,CACbuC,OAAQ,EACRtC,cAAc,EACduC,WAAY,IAGbI,cAAc7C,KAAKe,MAAM0B,a,uBAG1B,WACC,OAAiC,IAA1BzC,KAAKe,MAAM0B,Y,4BAGnB,WACC,OACC,cAAC9B,EAAA,EAAD,CAAQmB,MAAO9B,KAAK8C,YAAc,UAAY,UAAWb,KAAK,KAAKnB,UAAU,MACrEF,QAASZ,KAAK8C,YAAc9C,KAAK+C,QAAU/C,KAAKgD,QADxD,SAEEhD,KAAK8C,YAAc,mDAAa,iD,mCAKpC,WACC,OAAQ9C,KAAK8C,aAAqC,IAAtB9C,KAAKe,MAAMyB,S,yBAGxC,WACC,IAAIS,EAAO,IAAIC,KAAyB,IAApBlD,KAAKe,MAAMyB,QAE/B,OACE,IAAMS,EAAKE,eAAeC,OAAO,GAAK,KACtC,IAAMH,EAAKI,iBAAiBD,OAAO,GAAK,KACxC,IAAMH,EAAKK,iBAAiBF,OAAO,GAAK,IACzCG,OAAON,EAAKO,qBAAuB,O,oBAIrC,WACC,OACC,eAAC3B,EAAA,EAAD,CAAOC,MAAM,OAAOhB,UAAU,sBAA9B,UACEd,KAAK+B,gBAEN,oBAAIjB,UAAU,YAAd,SAA2Bd,KAAKyD,gBAE/BzD,KAAK0D,iBAEN,cAAC/C,EAAA,EAAD,CAAQmB,MAAM,SACNG,KAAK,KACLnB,UAAU,MACVF,QAASZ,KAAK2D,OACdvB,SAAUpC,KAAK4D,wBAJvB,wDAOA,cAACjD,EAAA,EAAD,CAAQmB,MAAM,SAASG,KAAK,KAAKnB,UAAU,MAAMF,QAASZ,KAAKyB,MAAMa,aAArE,+D,GAvFmCvC,G,gECWlB8D,E,kDACpB,WAAmBpC,GAAqB,IAAD,6BACtC,cAAMA,GACNC,IAAS,gBAET,EAAKX,MAAQ,CACZ+C,cAAc,GALuB,E,kDASvC,WACC9D,KAAKC,SAAS,CACb6D,cAAe9D,KAAKe,MAAM+C,iB,4BAI5B,WACC,OAAyB,IAArB9D,KAAKyB,MAAMG,MACP,sEAED,wCACL5B,KAAKyB,MAAMG,MAAQ,GAAK,GAAM5B,KAAKyB,MAAMG,OAAS,IAAM5B,KAAKyB,MAAMG,MAAQ,EAAK,uBAAU,oCAC3F2B,OAAOvD,KAAKyB,MAAMG,QACjB5B,KAAKyB,MAAMG,MAAQ,KAAO,GAA0B,KAArB5B,KAAKyB,MAAMG,MAAe,wCAAY,iD,+BAGxE,WACC,OAA4B,IAArB5B,KAAKyB,MAAMG,Q,oBAGnB,WACC,OACC,eAACmC,EAAA,EAAD,CAAQjC,MAAM,OAAOkC,MAAI,EAAzB,UACC,cAACC,EAAA,EAAD,CAAanD,UAAU,iCAAvB,SAAyDd,KAAKkE,mBAE9D,eAACC,EAAA,EAAD,WACC,cAACC,EAAA,EAAD,UACC,eAACC,EAAA,EAAD,CAAgBvD,UAAU,MAAMwD,OAAQtE,KAAKe,MAAM+C,aAAcS,OAAQvE,KAAKwE,eAA9E,UACC,cAACC,EAAA,EAAD,CAAgB3C,MAAM,UAAU4C,OAAK,EAArC,4CAIA,eAACC,EAAA,EAAD,CAAcC,OAAK,EAAnB,UACC,cAACC,EAAA,EAAD,CAAcjE,QAASZ,KAAKyB,MAAMqD,eAAlC,kDAIA,cAACD,EAAA,EAAD,CAAcjE,QAASZ,KAAKyB,MAAMsD,aAAlC,4EAOH,cAACX,EAAA,EAAD,UACC,cAACzD,EAAA,EAAD,CAAQmB,MAAM,SACNhB,UAAU,MACVsB,SAAUpC,KAAKgF,oBACfpE,QAASZ,KAAKyB,MAAMwD,kBAH5B,kI,GAvD8B1D,c,SJV/BzB,O,6BAAAA,I,0BAAAA,M,SAWgBoF,E,kDACpB,WAAmBzD,GAAa,IAAD,6BAC9B,cAAMA,GACNC,IAAS,gBAET,EAAKX,MAAQ,CACZoE,SAAU,CACT,CAAElE,KAAMnB,EAAY0B,YAAa4D,IAAK,EAAG7E,MAAO,2CAChD,CAAEU,KAAMnB,EAAYyC,UAAW6C,IAAK,EAAG7E,MAAO,+DAPlB,E,6CAY/B,WACC,IAAI8E,EAASrF,KAAKe,MAAMoE,SAASE,OAEjC,OAAkB,IAAXA,EAAerF,KAAKe,MAAMoE,SAASE,EAAS,GAAGD,IAAM,EAAI,I,wBAGjE,SAAmBnE,GAClB,IAAMqE,EAAgBtF,KAAKuF,YAE3BC,QAAQC,IAAR,iBAAsB3F,EAAYmB,GAAlC,uBAAsDqE,IAEtDtF,KAAKC,SAAS,CACbkF,SAAS,GAAD,mBACJnF,KAAKe,MAAMoE,UADP,CAEP,CACClE,KAAMA,EACNmE,IAAKE,EACL/E,MAAM,GAAD,OAAK+E,EAAL,aAAuBrE,IAASnB,EAAY0B,YAAc,uCAAW,iE,2BAM9E,SAAsB4D,GACrBI,QAAQC,IAAI,+BAAiCL,GAE7CpF,KAAKC,SAAS,CACbkF,SAAUnF,KAAKe,MAAMoE,SAASO,QAAO,SAAAjF,GACpC,OAAOA,EAAM2E,MAAQA,S,+BAKxB,WACCI,QAAQC,IAAI,yBAEZzF,KAAKC,SAAS,CACbkF,SAAU,O,oBAIZ,WAAiB,IAAD,OACf,OACC,eAAC,WAAD,WACC,cAAC,EAAD,CAAQvD,MAAO5B,KAAKe,MAAMoE,SAASE,OAC3BP,eAAgB,kBAAM,EAAKa,WAAW7F,EAAY0B,cAClDuD,aAAc,kBAAM,EAAKY,WAAW7F,EAAYyC,YAChD0C,kBAAmBjF,KAAKiF,oBAEhC,yBAASnE,UAAU,4BAAnB,SACEd,KAAKe,MAAMoE,SAASS,KAAI,SAAAC,GACxB,OAAQA,EAAQ5E,MACf,KAAKnB,EAAY0B,YAChB,OACC,cAAC,EAAD,CACac,aAAc,kBAAM,EAAKwD,cAAcD,EAAQT,MAD5D,SAEES,EAAQtF,OAFQsF,EAAQT,KAK5B,KAAKtF,EAAYyC,UAChB,OACC,cAAC,EAAD,CACWD,aAAc,kBAAM,EAAKwD,cAAcD,EAAQT,MAD1D,SAEES,EAAQtF,OAFMsF,EAAQT,KAK1B,QAGC,OAFAI,QAAQO,MAAM,2BAEP,kB,GAlFkBxE,aKlBjCyE,IAASC,OAAO,cAAC,EAAD,IAAQC,SAASC,eAAe,W","file":"static/js/main.68267cdb.chunk.js","sourcesContent":["import { Component, Fragment } from \"react\";\nimport autobind from \"auto-bind\";\nimport Incrementer from \"./components/incrementer\";\nimport Stopwatch from \"./components/stopwatch\";\nimport Header from \"./components/header\";\n\ninterface AppState {\n\telements: Array<CounterData>\n}\n\nenum CounterType {\n\tIncrementer,\n\tStopwatch\n}\n\ntype CounterData = {\n\ttype: CounterType;\n\tkey: number;\n\ttitle: string;\n}\n\nexport default class App extends Component<any, AppState> {\n\tpublic constructor(props: any) {\n\t\tsuper(props);\n\t\tautobind(this);\n\n\t\tthis.state = {\n\t\t\telements: [\n\t\t\t\t{ type: CounterType.Incrementer, key: 1, title: \"1. бројач\" },\n\t\t\t\t{ type: CounterType.Stopwatch, key: 2, title: \"2. штоперица\" }\n\t\t\t]\n\t\t};\n\t}\n\n\tprivate getNewKey() {\n\t\tlet length = this.state.elements.length;\n\n\t\treturn length !== 0 ? this.state.elements[length - 1].key + 1 : 1;\n\t}\n\n\tprivate addCounter(type: CounterType) {\n\t\tconst newElementKey = this.getNewKey();\n\n\t\tconsole.log(`Adding ${CounterType[type]} with key = ${newElementKey}`);\n\n\t\tthis.setState({\n\t\t\telements: [\n\t\t\t\t...this.state.elements,\n\t\t\t\t{\n\t\t\t\t\ttype: type,\n\t\t\t\t\tkey: newElementKey,\n\t\t\t\t\ttitle: `${newElementKey}. ${type === CounterType.Incrementer ? \"бројач\" : \"штоперица\"}`\n\t\t\t\t}\n\t\t\t]\n\t\t});\n\t}\n\n\tprivate removeElement(key: number) {\n\t\tconsole.log(\"Deleting element with key = \" + key);\n\n\t\tthis.setState({\n\t\t\telements: this.state.elements.filter(value => {\n\t\t\t\treturn value.key !== key;\n\t\t\t})\n\t\t});\n\t}\n\n\tprivate removeAllElements() {\n\t\tconsole.log(\"Deleting all elements\");\n\n\t\tthis.setState({\n\t\t\telements: []\n\t\t});\n\t}\n\n\tpublic render() {\n\t\treturn (\n\t\t\t<Fragment>\n\t\t\t\t<Header count={this.state.elements.length}\n\t\t\t\t        addIncrementer={() => this.addCounter(CounterType.Incrementer)}\n\t\t\t\t        addStopwatch={() => this.addCounter(CounterType.Stopwatch)}\n\t\t\t\t        removeAllElements={this.removeAllElements}/>\n\n\t\t\t\t<section className=\"d-inline-block mx-md-auto\">\n\t\t\t\t\t{this.state.elements.map(element => {\n\t\t\t\t\t\tswitch (element.type) {\n\t\t\t\t\t\t\tcase CounterType.Incrementer:\n\t\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t\t<Incrementer key={element.key}\n\t\t\t\t\t\t\t\t\t             removeAction={() => this.removeElement(element.key)}>\n\t\t\t\t\t\t\t\t\t\t{element.title}\n\t\t\t\t\t\t\t\t\t</Incrementer>\n\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\tcase CounterType.Stopwatch:\n\t\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t\t<Stopwatch key={element.key}\n\t\t\t\t\t\t\t\t\t           removeAction={() => this.removeElement(element.key)}>\n\t\t\t\t\t\t\t\t\t\t{element.title}\n\t\t\t\t\t\t\t\t\t</Stopwatch>\n\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\t\tconsole.error(\"Unknown type of counter\");\n\n\t\t\t\t\t\t\t\treturn null;\n\t\t\t\t\t\t}\n\t\t\t\t\t})}\n\t\t\t\t</section>\n\t\t\t</Fragment>\n\t\t);\n\t}\n}","import { Component, KeyboardEvent, FocusEvent } from \"react\";\r\nimport { Button } from \"reactstrap\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport \"../styles/counter.css\";\r\n\r\nexport interface CounterProps {\r\n\tremoveAction: () => void\r\n}\r\n\r\nexport interface CounterState {\r\n\ttitle: string,\r\n\teditingTitle: boolean\r\n}\r\n\r\nexport default abstract class Counter<P extends CounterProps, S extends CounterState> extends Component<P, S> {\r\n\tprivate changeTitleToInput() {\r\n\t\tthis.setState({\r\n\t\t\teditingTitle: true\r\n\t\t});\r\n\t}\r\n\r\n\tprivate checkChangingToText(event: KeyboardEvent<HTMLInputElement> | FocusEvent<HTMLInputElement>) {\r\n\t\tif ((event instanceof KeyboardEvent && event.code === \"Enter\") || event instanceof FocusEvent)\r\n\t\t\tthis.setState({\r\n\t\t\t\ttitle: event.currentTarget.value,\r\n\t\t\t\teditingTitle: false\r\n\t\t\t});\r\n\t}\r\n\r\n\tprotected getTitleField() {\r\n\t\tlet titleText = <Button onClick={this.changeTitleToInput} className=\"title\">{this.state.title}</Button>,\r\n\t\t    titleEdit = <input type=\"text\"\r\n\t\t                       maxLength={12}\r\n\t\t                       className=\"form-control default titleEdit\"\r\n\t\t                       onKeyUp={this.checkChangingToText}\r\n\t\t                       onBlur={this.checkChangingToText}\r\n\t\t                       defaultValue={this.state.title}/>;\r\n\r\n\t\treturn this.state.editingTitle ? titleEdit : titleText;\r\n\t}\r\n}","import Counter, { CounterProps, CounterState } from \"./counter\";\nimport { Button, Badge } from \"reactstrap\";\nimport autobind from \"auto-bind\";\n\ninterface IncrementerState extends CounterState {\n\tcount: number\n}\n\nexport default class Incrementer extends Counter<CounterProps, IncrementerState> {\n\tpublic constructor(props: CounterProps) {\n\t\tsuper(props);\n\t\tautobind(this);\n\n\t\tthis.state = {\n\t\t\ttitle: this.props.children as string,\n\t\t\teditingTitle: false,\n\t\t\tcount: 0\n\t\t};\n\t}\n\n\tprivate getCount() {\n\t\treturn this.state.count === 0 ? \"Нула\" : this.state.count;\n\t}\n\n\tprivate doIncrement() {\n\t\tthis.setState({\n\t\t\tcount: this.state.count + 1\n\t\t});\n\t}\n\n\tprivate doDecrement() {\n\t\tthis.setState({\n\t\t\tcount: this.state.count - 1\n\t\t});\n\t}\n\n\tprivate canDecrement() {\n\t\treturn this.state.count === 0;\n\t}\n\n\tpublic render() {\n\t\treturn (\n\t\t\t<Badge color=\"warning\" className=\"m-1 counter bg-warning\">\n\t\t\t\t{this.getTitleField()}\n\n\t\t\t\t<h4 className=\"display-4\">{this.getCount()}</h4>\n\n\t\t\t\t<Button color=\"secondary\" size=\"sm\" onClick={this.doIncrement} className=\"m-2\">Повећај</Button>\n\t\t\t\t<Button color=\"secondary\"\n\t\t\t\t        size=\"sm\"\n\t\t\t\t        onClick={this.doDecrement}\n\t\t\t\t        className=\"m-2\"\n\t\t\t\t        disabled={this.canDecrement()}>Смањи</Button>\n\t\t\t\t<Button color=\"danger\" size=\"sm\" onClick={this.props.removeAction} className=\"m-2\">Избриши</Button>\n\t\t\t</Badge>\n\t\t);\n\t}\n}","import Counter, { CounterProps, CounterState } from \"./counter\";\nimport { Button, Badge } from \"reactstrap\";\nimport autobind from \"auto-bind\";\n\ninterface StopwatchState extends CounterState {\n\ttenths: number\n\tstopwatch: number\n}\n\nexport default class Stopwatch extends Counter<CounterProps, StopwatchState> {\n\tpublic constructor(props: CounterProps) {\n\t\tsuper(props);\n\t\tautobind(this);\n\n\t\tthis.state = {\n\t\t\ttitle: this.props.children as string,\n\t\t\teditingTitle: false,\n\t\t\ttenths: 0,\n\t\t\tstopwatch: -1\n\t\t};\n\t}\n\n\tprivate updateTime() {\n\t\tthis.setState({\n\t\t\ttenths: this.state.tenths + 1\n\t\t});\n\t}\n\n\tprivate onStart() {\n\t\tthis.setState({\n\t\t\tstopwatch: window.setInterval(this.updateTime, 100)\n\t\t});\n\t}\n\n\tprivate onPause() {\n\t\tclearInterval(this.state.stopwatch);\n\n\t\tthis.setState({\n\t\t\tstopwatch: -1\n\t\t});\n\t}\n\n\tprivate onStop() {\n\t\tthis.setState({\n\t\t\ttenths: 0,\n\t\t\teditingTitle: false,\n\t\t\tstopwatch: -1\n\t\t});\n\n\t\tclearInterval(this.state.stopwatch);\n\t}\n\n\tprivate isRunning() {\n\t\treturn this.state.stopwatch !== -1;\n\t}\n\n\tprivate getStartButton() {\n\t\treturn (\n\t\t\t<Button color={this.isRunning() ? \"warning\" : \"success\"} size=\"sm\" className=\"m-2\"\n\t\t\t        onClick={this.isRunning() ? this.onPause : this.onStart}>\n\t\t\t\t{this.isRunning() ? \"Паузирај\" : \"Покрени\"}\n\t\t\t</Button>\n\t\t);\n\t}\n\n\tprivate isResetButtonDisabled() {\n\t\treturn !this.isRunning() && this.state.tenths === 0;\n\t}\n\n\tprivate getTimeText() {\n\t\tlet time = new Date(this.state.tenths * 100);\n\n\t\treturn (\n\t\t\t(\"0\" + time.getUTCHours()).slice(-2) + \":\" +\n\t\t\t(\"0\" + time.getUTCMinutes()).slice(-2) + \":\" +\n\t\t\t(\"0\" + time.getUTCSeconds()).slice(-2) + \":\" +\n\t\t\tString(time.getUTCMilliseconds() / 100)\n\t\t);\n\t}\n\n\tpublic render() {\n\t\treturn (\n\t\t\t<Badge color=\"info\" className=\"counter m-1 bg-info\">\n\t\t\t\t{this.getTitleField()}\n\n\t\t\t\t<h4 className=\"display-4\">{this.getTimeText()}</h4>\n\n\t\t\t\t{this.getStartButton()}\n\n\t\t\t\t<Button color=\"danger\"\n\t\t\t\t        size=\"sm\"\n\t\t\t\t        className=\"m-2\"\n\t\t\t\t        onClick={this.onStop}\n\t\t\t\t        disabled={this.isResetButtonDisabled()}>\n\t\t\t\t\tРесетуј\n\t\t\t\t</Button>\n\t\t\t\t<Button color=\"danger\" size=\"sm\" className=\"m-2\" onClick={this.props.removeAction}>\n\t\t\t\t\tИзбриши\n\t\t\t\t</Button>\n\t\t\t</Badge>\n\t\t);\n\t}\n}","import { Component } from \"react\";\nimport {\n\tButton, Navbar, NavbarBrand, Nav, NavItem,\n\tButtonDropdown, DropdownMenu, DropdownToggle,\n\tDropdownItem\n} from \"reactstrap\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport autobind from \"auto-bind\";\n\ninterface HeaderProps {\n\tcount: number,\n\taddIncrementer: () => void,\n\taddStopwatch: () => void,\n\tremoveAllElements: () => void\n}\n\ninterface HeaderState {\n\tdropdownOpen: boolean\n}\n\nexport default class Header extends Component<HeaderProps, HeaderState> {\n\tpublic constructor(props: HeaderProps) {\n\t\tsuper(props);\n\t\tautobind(this);\n\n\t\tthis.state = {\n\t\t\tdropdownOpen: false\n\t\t};\n\t}\n\n\tprivate toggleDropdown() {\n\t\tthis.setState({\n\t\t\tdropdownOpen: !this.state.dropdownOpen\n\t\t});\n\t}\n\n\tprivate getCorrectText() {\n\t\tif (this.props.count === 0)\n\t\t\treturn \"Нема бројача\";\n\n\t\treturn \"Укупно\" +\n\t\t\t(this.props.count % 10 < 2 || (this.props.count <= 20 && this.props.count > 4) ? \" има \" : \" имају \") +\n\t\t\tString(this.props.count) +\n\t\t\t(this.props.count % 10 === 1 && this.props.count !== 11 ? \" бројач\" : \" бројача\");\n\t}\n\n\tprivate canDeleteElements() {\n\t\treturn this.props.count === 0;\n\t}\n\n\tpublic render() {\n\t\treturn (\n\t\t\t<Navbar color=\"dark\" dark>\n\t\t\t\t<NavbarBrand className=\"display-4 mb-0 ms-2 text-white\">{this.getCorrectText()}</NavbarBrand>\n\n\t\t\t\t<Nav>\n\t\t\t\t\t<NavItem>\n\t\t\t\t\t\t<ButtonDropdown className=\"m-1\" isOpen={this.state.dropdownOpen} toggle={this.toggleDropdown}>\n\t\t\t\t\t\t\t<DropdownToggle color=\"success\" caret>\n\t\t\t\t\t\t\t\tДодај\n\t\t\t\t\t\t\t</DropdownToggle>\n\n\t\t\t\t\t\t\t<DropdownMenu right>\n\t\t\t\t\t\t\t\t<DropdownItem onClick={this.props.addIncrementer}>\n\t\t\t\t\t\t\t\t\tБројач\n\t\t\t\t\t\t\t\t</DropdownItem>\n\n\t\t\t\t\t\t\t\t<DropdownItem onClick={this.props.addStopwatch}>\n\t\t\t\t\t\t\t\t\tШтоперица\n\t\t\t\t\t\t\t\t</DropdownItem>\n\t\t\t\t\t\t\t</DropdownMenu>\n\t\t\t\t\t\t</ButtonDropdown>\n\t\t\t\t\t</NavItem>\n\n\t\t\t\t\t<NavItem>\n\t\t\t\t\t\t<Button color=\"danger\"\n\t\t\t\t\t\t        className=\"m-1\"\n\t\t\t\t\t\t        disabled={this.canDeleteElements()}\n\t\t\t\t\t\t        onClick={this.props.removeAllElements}>\n\t\t\t\t\t\t\tИзбриши све бројаче\n\t\t\t\t\t\t</Button>\n\t\t\t\t\t</NavItem>\n\t\t\t\t</Nav>\n\t\t\t</Navbar>\n\t\t);\n\t}\n}","import ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(<App/>, document.getElementById(\"root\"));"],"sourceRoot":""}